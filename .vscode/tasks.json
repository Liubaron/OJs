{
	"version": "2.0.0",
	"tasks": [
		{
			"type": "cppbuild",
			"label": "C/C++: g++.exe build active file",
			"command": "\"${config:task.gccpath}/g++.exe\"",
			"args": [
				"-g",
				"${file}",
				"-o",
				"${workspaceFolder}/Debug/${relativeFileDirname}/${fileBasenameNoExtension}.exe"
			],
			"options": {
				"cwd": "${config:task.gccpath}"
			},
			"problemMatcher": [
				"$gcc"
			],
			"group": {
				"kind": "build",
				"isDefault": true
			},
			"detail": "compiler: ${config:task.gccpath}/g++.exe"
		}
	]
}

// https://code.visualstudio.com/docs/editor/variables-reference
// Variables Reference

// Visual Studio Code supports variable substitution in Debugging and Task configuration files as well as some select settings. Variable substitution is supported inside key and value strings in launch.json and tasks.json files using ${variableName} syntax.
// Predefined variables#

// The following predefined variables are supported:

//     ${workspaceFolder} - the path of the folder opened in VS Code
//     ${workspaceFolderBasename} - the name of the folder opened in VS Code without any slashes (/)
//     ${file} - the current opened file
//     ${fileWorkspaceFolder} - the current opened file's workspace folder
//     ${relativeFile} - the current opened file relative to workspaceFolder
//     ${relativeFileDirname} - the current opened file's dirname relative to workspaceFolder
//     ${fileBasename} - the current opened file's basename
//     ${fileBasenameNoExtension} - the current opened file's basename with no file extension
//     ${fileDirname} - the current opened file's dirname
//     ${fileExtname} - the current opened file's extension
//     ${cwd} - the task runner's current working directory on startup
//     ${lineNumber} - the current selected line number in the active file
//     ${selectedText} - the current selected text in the active file
//     ${execPath} - the path to the running VS Code executable
//     ${defaultBuildTask} - the name of the default build task
//     ${pathSeparator} - the character used by the operating system to separate components in file paths
